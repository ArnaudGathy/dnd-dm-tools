generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CampaignId {
  PHANDELVER
  DRAGONS
  TOMB
}

enum CampaignStatus {
  ACTIVE
  ABANDONED
  FINISHED
}

model Campaign {
  id        Int            @id @default(autoincrement())
  name      CampaignId
  status    CampaignStatus @default(ACTIVE)
  character Character[]
  party     Party          @relation(fields: [partyId], references: [id])
  partyId   Int
}

enum PartyId {
  MIFA
  PAINTERS
}

model Party {
  id        Int        @id @default(autoincrement())
  name      PartyId
  campaigns Campaign[]
}

model Spell {
  id                 String               @id
  name               String
  level              Int
  isRitual           Boolean              @default(false)
  characters         Character[]
  SpellsOnCharacters SpellsOnCharacters[]
}

enum Classes {
  ARTIFICER
  BARBARIAN
  BARD
  CLERIC
  DRUID
  FIGHTER
  MONK
  PALADIN
  RANGER
  ROGUE
  SORCERER
  WARLOCK
  WIZARD
}

enum CharacterStatus {
  ACTIVE
  DEAD
  RETIRED
}

model Character {
  id                 Int                  @id @default(autoincrement())
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  status             CharacterStatus      @default(ACTIVE)
  name               String               @db.VarChar(255)
  className          Classes
  owner              String
  campaign           Campaign             @relation(fields: [campaignId], references: [id])
  campaignId         Int
  spells             Spell[]
  SpellsOnCharacters SpellsOnCharacters[]
}

model SpellsOnCharacters {
  character   Character @relation(fields: [characterId], references: [id])
  characterId Int
  spell       Spell     @relation(fields: [spellId], references: [id])
  spellId     String

  @@id([spellId, characterId])
}
